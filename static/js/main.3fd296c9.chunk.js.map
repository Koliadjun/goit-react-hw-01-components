{"version":3,"sources":["components/profile/profile.module.css","components/friendList/FriendListItem.module.css","components/statistics/Statistics.module.css","components/friendList/FriendList.module.css","components/transactionHistory/TransactionHistory.module.css","components/profile/Profile.jsx","components/statistics/Statistics.jsx","components/friendList/FriendListItem.jsx","components/friendList/FriendList.jsx","components/transactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","item","label","quantity","followers","views","likes","prototype","PropTypes","string","isRequired","shape","number","Statistics","title","statistics","statList","map","stat","color","percentage","style","backgroundColor","id","array","FriendListItem","friend","classNames","isOnline","status","statusOnline","statusOffline","width","bool","FriendList","friends","friendList","toString","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,OAAS,wBAAwB,IAAM,qBAAqB,SAAW,0BAA0B,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,gBCApUD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,cAAgB,sCAAsC,aAAe,qCAAqC,OAAS,+BAA+B,KAAO,+B,gBCAvPD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,ugBCAvND,EAAOC,QAAU,CAAC,WAAa,iC,2nBCA/BD,EAAOC,QAAU,CAAC,mBAAqB,iD,upECCjCC,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9C,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKN,EAAQO,IAAG,+CAAYV,GAAQK,UAAWC,IAAEH,SACtD,mBAAGE,UAAWC,IAAEN,KAAhB,SAAuBA,IACvB,oBAAGK,UAAWC,IAAEL,IAAhB,cAAuBA,KACvB,mBAAGI,UAAWC,IAAEJ,SAAhB,SAA2BA,OAG7B,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,qBAAIC,UAAWC,IAAEK,KAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,uBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMU,eAEtC,qBAAIT,UAAWC,IAAEK,KAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMW,WAEtC,qBAAIV,UAAWC,IAAEK,KAAjB,UACE,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,EAAMY,kBAM9CjB,EAAQkB,UAAY,CAClBjB,KAAMkB,IAAUC,OAAOC,WACvBnB,IAAKiB,IAAUC,OAAOC,WACtBlB,SAAUgB,IAAUC,OAAOC,WAC3BjB,OAAQe,IAAUC,OAAOC,WACzBhB,MAAOc,IAAUG,MAAM,CACrBP,UAAWI,IAAUI,OAAOF,WAC5BL,MAAOG,IAAUI,OAAOF,WACxBJ,MAAOE,IAAUI,OAAOF,cAIbrB,Q,uBCvCTwB,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOpB,EAAV,EAAUA,MAAV,OACjB,0BAASC,UAAWC,IAAEmB,WAAtB,UACGD,GAAS,oBAAInB,UAAWC,IAAEkB,MAAjB,SAAyBA,IACnC,oBAAInB,UAAWC,IAAEoB,SAAjB,SACGtB,EAAMuB,KAAI,SAAAC,GACT,IAAIC,EACJ,QAAQ,GACN,KAAKD,EAAKE,WAAa,GACrBD,EAAQ,UACR,MACF,KAAKD,EAAKE,WAAa,GACrBD,EAAQ,UACR,MACF,KAAKD,EAAKE,WAAa,GACrBD,EAAQ,UACR,MACF,KAAKD,EAAKE,WAAa,GAGvB,QACED,EAAQ,UAGZ,OACE,qBACExB,UAAWC,IAAEK,KACboB,MAAO,CAAEC,gBAAgB,IAAD,OAAMH,IAFhC,UAKE,sBAAMxB,UAAWC,IAAEM,MAAnB,SAA2BgB,EAAKhB,QAChC,uBAAMP,UAAWC,IAAEwB,WAAnB,UAAgCF,EAAKE,WAArC,SAHKF,EAAKK,aAWtBV,EAAWN,UAAY,CACrBO,MAAON,IAAUC,OACjBf,MAAOc,IAAUgB,MAAMd,YAEVG,Q,uBC1CTY,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,EAAaD,EAAOE,SAAP,UACVhC,IAAEiC,OADQ,YACEjC,IAAEkC,cADJ,UAEVlC,IAAEiC,OAFQ,YAEEjC,IAAEmC,eACrB,OACE,qBAAIpC,UAAWC,IAAEK,KAAjB,UACE,sBAAMN,UAAWgC,IACjB,qBACEhC,UAAWC,IAAEH,OACbM,IAAK2B,EAAOjC,OACZO,IAAI,uBACJgC,MAAM,OAER,mBAAGrC,UAAWC,IAAEN,KAAhB,SAAuBoC,EAAOpC,WAIpCmC,EAAelB,UAAY,CACzBd,OAAQe,YAAUC,OAAOC,WACzBpB,KAAMkB,YAAUC,OAAOC,WACvBkB,SAAUpB,YAAUyB,KAAKvB,WACzBa,GAAIf,YAAUI,OAAOF,YAERe,Q,iBCtBTS,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIxC,UAAWC,IAAEwC,WAAjB,SACGD,EAAQlB,KAAI,SAAAS,GAAM,OACjB,cAAC,EAAD,CAA2CA,OAAQA,GAA9BA,EAAOH,GAAGc,kBAIrCH,EAAW3B,UAAY,CACrB4B,QAAS3B,YAAUgB,MAAMd,YAEZwB,Q,yBCXTI,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,wBAAO5C,UAAWC,IAAE4C,mBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMtB,KAAI,SAAAhB,GAAI,OACb,+BACE,6BAAKA,EAAKwC,OACV,6BAAKxC,EAAKyC,SACV,6BAAKzC,EAAK0C,aAHH1C,EAAKsB,aAStBe,EAAmB/B,UAAY,CAC7BgC,MAAO/B,IAAUG,MAAM,CACrBY,GAAIf,IAAUC,OAAOC,WACrB+B,KAAMjC,IAAUC,OAAOC,WACvBgC,OAAQlC,IAAUI,OAAOF,WACzBiC,SAAUnC,IAAUC,OAAOC,cAGhB4B,Q,QCCAM,MAlBf,WACE,OACE,sBAAKjD,UAAU,MAAf,UACE,cAAC,EAAD,CACEL,KAAMuD,EAAKvD,KACXC,IAAKsD,EAAKtD,IACVC,SAAUqD,EAAKrD,SACfC,OAAQoD,EAAKpD,OACbC,MAAOmD,EAAKnD,QAEd,cAAC,EAAD,CAAYA,MAAOoD,IACnB,cAAC,EAAD,CAAYhC,MAAO,gBAAiBpB,MAAOoD,IAC3C,cAAC,EAAD,CAAYX,QAASA,IACrB,cAAC,EAAD,CAAoBI,MAAOQ,IAX7B,QCJWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3fd296c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__FOwjt\",\"description\":\"profile_description__2ExtN\",\"name\":\"profile_name__3H8Dj\",\"avatar\":\"profile_avatar__1jKK_\",\"tag\":\"profile_tag__1IhoK\",\"location\":\"profile_location__3HIs_\",\"item\":\"profile_item__20hWM\",\"stats\":\"profile_stats__28SKt\",\"label\":\"profile_label__4gVYX\",\"quantity\":\"profile_quantity__2_cQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2SrMP\",\"status\":\"FriendListItem_status__XQ3qk\",\"statusOffline\":\"FriendListItem_statusOffline__2ykn5\",\"statusOnline\":\"FriendListItem_statusOnline__1A9iZ\",\"avatar\":\"FriendListItem_avatar__aHZJO\",\"name\":\"FriendListItem_name__uVYhL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1G8AH\",\"title\":\"Statistics_title__r3CCj\",\"statList\":\"Statistics_statList__33tnY\",\"item\":\"Statistics_item__V5txQ\",\"label\":\"Statistics_label__4230R\",\"percentage\":\"Statistics_percentage__wJ8w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friensList\":\"FriendList_friensList__1piGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1o0XW\"};","import PropTypes from 'prop-types';\nimport s from '../profile/profile.module.css';\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={`Аватар ${name}`} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\nProfile.prototype = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from '../statistics/Statistics.module.css';\nconst Statistics = ({ title, stats }) => (\n  <section className={s.statistics}>\n    {title && <h2 className={s.title}>{title}</h2>}\n    <ul className={s.statList}>\n      {stats.map(stat => {\n        let color;\n        switch (true) {\n          case stat.percentage < 10:\n            color = '#ff0000';\n            break;\n          case stat.percentage < 20:\n            color = '#ff8e00';\n            break;\n          case stat.percentage < 30:\n            color = '#ffe100';\n            break;\n          case stat.percentage > 30:\n            color = '#00ff00';\n            break;\n          default:\n            color = '#00ff00';\n            break;\n        }\n        return (\n          <li\n            className={s.item}\n            style={{ backgroundColor: ` ${color}` }}\n            key={stat.id}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}&#37;</span>\n          </li>\n        );\n      })}\n    </ul>\n  </section>\n);\n\nStatistics.prototype = {\n  title: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\nexport default Statistics;\n","import { PropTypes } from 'prop-types';\nimport s from '../friendList/FriendListItem.module.css';\nconst FriendListItem = ({ friend }) => {\n  let classNames = friend.isOnline\n    ? `${s.status} ${s.statusOnline}`\n    : `${s.status} ${s.statusOffline}`;\n  return (\n    <li className={s.item}>\n      <span className={classNames}></span>\n      <img\n        className={s.avatar}\n        src={friend.avatar}\n        alt=\"avatar {friend.name}\"\n        width=\"48\"\n      />\n      <p className={s.name}>{friend.name}</p>\n    </li>\n  );\n};\nFriendListItem.prototype = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n};\nexport default FriendListItem;\n","import { PropTypes } from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from '../friendList/FriendList.module.css';\nconst FriendList = ({ friends }) => (\n  <ul className={s.friendList}>\n    {friends.map(friend => (\n      <FriendListItem key={friend.id.toString()} friend={friend} />\n    ))}\n  </ul>\n);\nFriendList.prototype = {\n  friends: PropTypes.array.isRequired,\n};\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from '../transactionHistory/TransactionHistory.module.css';\nconst TransactionHistory = ({ items }) => (\n  <table className={s.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\nTransactionHistory.prototype = {\n  items: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n  }),\n};\nexport default TransactionHistory;\n","import './App.css';\n\nimport Profile from './components/profile/Profile';\nimport user from './components/profile/user.json';\n\nimport Statistics from './components/statistics/Statistics';\nimport statisticalData from './components/statistics/statistical-data.json';\n\nimport FriendList from './components/friendList/FriendList';\nimport friends from './components/friendList/friends.json';\n\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport transactions from './components/transactionHistory/transaction.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics stats={statisticalData} />\n      <Statistics title={'Uploaded file'} stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/profile/Profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","prototype","PropTypes","string","shape","number","App","className","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QACMA,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9C,OACE,sBAAKC,MAAM,UAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qBAAKC,IAAKH,EAAQI,IAAI,8CAAgBF,MAAM,WAC5C,mBAAGA,MAAM,OAAT,SAAiBL,IACjB,oBAAGK,MAAM,MAAT,cAAiBJ,KACjB,mBAAGI,MAAM,WAAT,SAAqBH,OAGvB,qBAAIG,MAAM,QAAV,UACE,+BACE,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMI,eAEhC,+BACE,sBAAMH,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMK,WAEhC,+BACE,sBAAMJ,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMM,kBAMxCX,EAAQY,UAAY,CAClBX,KAAMY,IAAUC,OAChBZ,IAAKW,IAAUC,OACfX,SAAUU,IAAUC,OACpBV,OAAQS,IAAUC,OAClBT,MAAOQ,IAAUE,MAAM,CACrBN,UAAWI,IAAUG,OACrBN,MAAOG,IAAUG,OACjBL,MAAOE,IAAUG,UAINhB,Q,OCvBAiB,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CACEjB,KAAMkB,EAAKlB,KACXC,IAAKiB,EAAKjB,IACVC,SAAUgB,EAAKhB,SACfC,OAAQe,EAAKf,OACbC,MAAOc,EAAKd,WCCLe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9b12705e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div class=\"profile\">\n      <div class=\"description\">\n        <img src={avatar} alt=\"Аватар {name}\" class=\"avatar\" />\n        <p class=\"name\">{name}</p>\n        <p class=\"tag\">@{tag}</p>\n        <p class=\"location\">{location}</p>\n      </div>\n\n      <ul class=\"stats\">\n        <li>\n          <span class=\"label\">followers</span>\n          <span class=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span class=\"label\">views</span>\n          <span class=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span class=\"label\">likes</span>\n          <span class=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\nProfile.prototype = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n};\n\nexport default Profile;\n","import './App.css';\nimport Profile from './components/profile/Profile';\nimport user from './components/profile/user.json';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
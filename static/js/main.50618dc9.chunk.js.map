{"version":3,"sources":["components/profile/profile.module.css","components/friendList/FriendListItem.module.css","components/statistics/Statistics.module.css","components/friendList/FriendList.module.css","components/transactionHistory/TransactionHistory.module.css","components/profile/Profile.jsx","components/statistics/Statistics.jsx","components/friendList/FriendListItem.jsx","components/friendList/FriendList.jsx","components/transactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","prototype","PropTypes","string","isRequired","shape","number","Statistics","title","statistics","statList","map","stat","item","percentage","id","array","FriendListItem","friend","classNames","isOnline","status","statusOnline","statusOffline","width","bool","FriendList","friends","friendList","toString","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,gBCA1QD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,cAAgB,sCAAsC,aAAe,qCAAqC,OAAS,+BAA+B,KAAO,+B,gBCAvPD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,ugBCAvND,EAAOC,QAAU,CAAC,WAAa,iC,2nBCA/BD,EAAOC,QAAU,CAAC,mBAAqB,iD,gpECCjCC,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9C,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKN,EAAQO,IAAG,+CAAYV,GAAQK,UAAWC,IAAEH,SACtD,mBAAGE,UAAWC,IAAEN,KAAhB,SAAuBA,IACvB,oBAAGK,UAAWC,IAAEL,IAAhB,cAAuBA,KACvB,mBAAGI,UAAWC,IAAEJ,SAAhB,SAA2BA,OAG7B,qBAAIG,UAAWC,IAAEF,MAAjB,UACE,+BACE,sBAAMC,UAAWC,IAAEK,MAAnB,uBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMS,eAEtC,+BACE,sBAAMR,UAAWC,IAAEK,MAAnB,mBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMU,WAEtC,+BACE,sBAAMT,UAAWC,IAAEK,MAAnB,mBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMW,kBAM9ChB,EAAQiB,UAAY,CAClBhB,KAAMiB,IAAUC,OAAOC,WACvBlB,IAAKgB,IAAUC,OAAOC,WACtBjB,SAAUe,IAAUC,OAAOC,WAC3BhB,OAAQc,IAAUC,OAAOC,WACzBf,MAAOa,IAAUG,MAAM,CACrBP,UAAWI,IAAUI,OAAOF,WAC5BL,MAAOG,IAAUI,OAAOF,WACxBJ,MAAOE,IAAUI,OAAOF,cAIbpB,Q,uBCvCTuB,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOnB,EAAV,EAAUA,MAAV,OACjB,0BAASC,UAAWC,IAAEkB,WAAtB,UACGD,GAAS,oBAAIlB,UAAWC,IAAEiB,MAAjB,SAAyBA,IACnC,oBAAIlB,UAAWC,IAAEmB,SAAjB,SACGrB,EAAMsB,KAAI,SAAAC,GAAI,OACb,qBAAItB,UAAWC,IAAEsB,KAAjB,UACE,sBAAMvB,UAAWC,IAAEK,MAAnB,SAA2BgB,EAAKhB,QAChC,sBAAMN,UAAWC,IAAEuB,WAAnB,SAAgCF,EAAKE,eAFXF,EAAKG,aASzCR,EAAWN,UAAY,CACrBO,MAAON,IAAUC,OACjBd,MAAOa,IAAUc,MAAMZ,YAEVG,Q,uBClBTU,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,EAAaD,EAAOE,SAAP,UACV7B,IAAE8B,OADQ,YACE9B,IAAE+B,cADJ,UAEV/B,IAAE8B,OAFQ,YAEE9B,IAAEgC,eACrB,OACE,qBAAIjC,UAAWC,IAAEsB,KAAjB,UACE,sBAAMvB,UAAW6B,IACjB,qBACE7B,UAAWC,IAAEH,OACbM,IAAKwB,EAAO9B,OACZO,IAAI,uBACJ6B,MAAM,OAER,mBAAGlC,UAAWC,IAAEN,KAAhB,SAAuBiC,EAAOjC,WAIpCgC,EAAehB,UAAY,CACzBb,OAAQc,YAAUC,OAAOC,WACzBnB,KAAMiB,YAAUC,OAAOC,WACvBgB,SAAUlB,YAAUuB,KAAKrB,WACzBW,GAAIb,YAAUI,OAAOF,YAERa,Q,iBCtBTS,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIrC,UAAWC,IAAEqC,WAAjB,SACGD,EAAQhB,KAAI,SAAAO,GAAM,OACjB,cAAC,EAAD,CAA2CA,OAAQA,GAA9BA,EAAOH,GAAGc,kBAIrCH,EAAWzB,UAAY,CACrB0B,QAASzB,YAAUc,MAAMZ,YAEZsB,Q,yBCXTI,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,wBAAOzC,UAAWC,IAAEyC,mBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMpB,KAAI,SAAAE,GAAI,OACb,+BACE,6BAAKA,EAAKoB,OACV,6BAAKpB,EAAKqB,SACV,6BAAKrB,EAAKsB,aAHHtB,EAAKE,aAStBe,EAAmB7B,UAAY,CAC7B8B,MAAO7B,IAAUG,MAAM,CACrBU,GAAIb,IAAUC,OAAOC,WACrB6B,KAAM/B,IAAUC,OAAOC,WACvB8B,OAAQhC,IAAUI,OAAOF,WACzB+B,SAAUjC,IAAUC,OAAOC,cAGhB0B,Q,QCAAM,MAjBf,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,CACEL,KAAMoD,EAAKpD,KACXC,IAAKmD,EAAKnD,IACVC,SAAUkD,EAAKlD,SACfC,OAAQiD,EAAKjD,OACbC,MAAOgD,EAAKhD,QAEd,cAAC,EAAD,CAAYA,MAAOiD,IACnB,cAAC,EAAD,CAAYX,QAASA,IACrB,cAAC,EAAD,CAAoBI,MAAOQ,IAV7B,QCJWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50618dc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__FOwjt\",\"description\":\"profile_description__2ExtN\",\"avatar\":\"profile_avatar__1jKK_\",\"tag\":\"profile_tag__1IhoK\",\"location\":\"profile_location__3HIs_\",\"stats\":\"profile_stats__28SKt\",\"label\":\"profile_label__4gVYX\",\"quantity\":\"profile_quantity__2_cQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2SrMP\",\"status\":\"FriendListItem_status__XQ3qk\",\"statusOffline\":\"FriendListItem_statusOffline__2ykn5\",\"statusOnline\":\"FriendListItem_statusOnline__1A9iZ\",\"avatar\":\"FriendListItem_avatar__aHZJO\",\"name\":\"FriendListItem_name__uVYhL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1G8AH\",\"title\":\"Statistics_title__r3CCj\",\"statList\":\"Statistics_statList__33tnY\",\"item\":\"Statistics_item__V5txQ\",\"label\":\"Statistics_label__4230R\",\"percentage\":\"Statistics_percentage__wJ8w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friensList\":\"FriendList_friensList__1piGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1o0XW\"};","import PropTypes from 'prop-types';\nimport s from '../profile/profile.module.css';\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={`Аватар ${name}`} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\nProfile.prototype = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from '../statistics/Statistics.module.css';\nconst Statistics = ({ title, stats }) => (\n  <section className={s.statistics}>\n    {title && <h2 className={s.title}>{title}</h2>}\n    <ul className={s.statList}>\n      {stats.map(stat => (\n        <li className={s.item} key={stat.id}>\n          <span className={s.label}>{stat.label}</span>\n          <span className={s.percentage}>{stat.percentage}</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.prototype = {\n  title: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\nexport default Statistics;\n","import { PropTypes } from 'prop-types';\nimport s from '../friendList/FriendListItem.module.css';\nconst FriendListItem = ({ friend }) => {\n  let classNames = friend.isOnline\n    ? `${s.status} ${s.statusOnline}`\n    : `${s.status} ${s.statusOffline}`;\n  return (\n    <li className={s.item}>\n      <span className={classNames}></span>\n      <img\n        className={s.avatar}\n        src={friend.avatar}\n        alt=\"avatar {friend.name}\"\n        width=\"48\"\n      />\n      <p className={s.name}>{friend.name}</p>\n    </li>\n  );\n};\nFriendListItem.prototype = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n};\nexport default FriendListItem;\n","import { PropTypes } from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from '../friendList/FriendList.module.css';\nconst FriendList = ({ friends }) => (\n  <ul className={s.friendList}>\n    {friends.map(friend => (\n      <FriendListItem key={friend.id.toString()} friend={friend} />\n    ))}\n  </ul>\n);\nFriendList.prototype = {\n  friends: PropTypes.array.isRequired,\n};\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from '../transactionHistory/TransactionHistory.module.css';\nconst TransactionHistory = ({ items }) => (\n  <table className={s.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\nTransactionHistory.prototype = {\n  items: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n  }),\n};\nexport default TransactionHistory;\n","import './App.css';\n\nimport Profile from './components/profile/Profile';\nimport user from './components/profile/user.json';\n\nimport Statistics from './components/statistics/Statistics';\nimport statisticalData from './components/statistics/statistical-data.json';\n\nimport FriendList from './components/friendList/FriendList';\nimport friends from './components/friendList/friends.json';\n\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport transactions from './components/transactionHistory/transaction.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}